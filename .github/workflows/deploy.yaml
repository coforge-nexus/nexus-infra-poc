name: Build, Test, and Push Image to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ECR_REPOSITORY: kajal-repo
  AWS_REGION: eu-west-1    

jobs:
  build_test_push:
    name: Build, Test, and Push Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.commit_hash }}-${{ env.timestamp }} -f docker/Dockerfile .

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Latest Snyk CLI
        run: npm install -g snyk

      - name: Snyk Authentication
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Docker Scan
        id: snyk-scan
        run: |
          snyk test --docker ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.commit_hash }}-${{ env.timestamp }} --severity-threshold=low --json > snyk-result.json || { echo 'Snyk scan failed'; cat snyk-result.json; exit 1; }

      - name: Count total number of vulnerabilities
        id: count-vulnerabilities
        run: |
          if [ -f snyk-result.json ]; then
            RESULTS_LENGTH=$(jq '.vulnerabilities | length' snyk-result.json)
            echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
            echo "Vulnerabilities found: $RESULTS_LENGTH"
          else
            echo "Snyk result file not found."
            echo "RESULTS_LENGTH=0" >> $GITHUB_ENV
          fi

      - name: Fail job if vulnerabilities are found
        if: ${{ env.RESULTS_LENGTH != '0' }}
        run: |
          echo "Job failed due to vulnerabilities."
          exit 1

      - name: Push Docker image to Amazon ECR
        if: ${{ env.RESULTS_LENGTH == '0' }}
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.commit_hash }}-${{ env.timestamp }}
