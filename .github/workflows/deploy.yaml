name: Deploy to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write # Required for requesting the JWT
  contents: read  # Required for actions/checkout

env:
  ECR_REPOSITORY: kajal-repo
  AWS_REGION: eu-west-1    

jobs:
  build:
    name: Build, Scan, and Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.commit_hash }}-${{ env.timestamp }}
        run: |
          echo "ECR Registry: $ECR_REGISTRY"
          echo "ECR Repository: $ECR_REPOSITORY"
          echo "Image Tag: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker images

      - name: Install Node.js for Snyk CLI
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Check if Docker image exists
        run: docker images | grep ${{ env.ECR_REPOSITORY }}

      - name: Scan Docker image for vulnerabilities
        run: |
          echo "Snyk scanning $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          snyk test --docker $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --severity-threshold=low --json > snyk-result.json || true
          cat snyk-result.json
          if [ "$(jq '.ok' snyk-result.json)" = "true" ]; then
            echo "Snyk scan completed successfully, no vulnerabilities found."
          else
            echo "Snyk scan found vulnerabilities or failed."
            cat snyk-result.json
          fi

      - name: Monitor Docker image in Snyk (Upload to Dashboard)
        run: |
          echo "Monitoring Docker image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG in Snyk"
          snyk monitor --docker $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --severity-threshold=low

      - name: Push Docker image to Amazon ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
